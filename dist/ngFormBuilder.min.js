!function(){"use strict";var e=angular.module("ngFormBuilder",["formio","dndLists","restangular","ngDialog","ui.bootstrap.accordion"]);e.service("formBuilderTools",function(){return{toCamelCase:function(e){return e.toLowerCase().replace(/ (.)/g,function(e,o){return o.toUpperCase()})}}}),e.directive("formBuilder",function(){return{replace:!0,templateUrl:"formio/formbuilder/builder.html",scope:{components:"="},controller:["$scope","formioComponents","formBuilderTools","ngDialog","Restangular","Formio",function(e,o,l,n,t,a){e.formComponents=o.components,e.formComponentGroups=o.groups,e.formComponentsByGroup=_.groupBy(e.formComponents,function(e){return e.group}),t.all("resource").getList().then(function(l){_.each(l,function(l){e.formComponentGroups[l.title.toLowerCase()]={title:l.title+" Fields"},e.formComponentsByGroup[l.title.toLowerCase()]={},_.each(l.components,function(n){var t=l.title.toLowerCase();e.formComponentsByGroup[t][t+"."+n.key]=_.merge(_.clone(o.components[n.type],!0),{title:l.title+" "+n.label,group:t,settings:n},{settings:{label:l.title+" "+n.label,key:t+"."+n.key,lockKey:!0}})})})}),e.components||(e.components=[]),e.removeComponent=function(){e.componentList.splice(e.componentList.indexOf(e.component),1),n.closeAll()},e.addComponent=function(o,l){return e.editComponent(o,l),l},e.editComponent=function(t,r){e.component=r,e.componentList=t,e.data={},r.key&&(e.data[r.key]=""),e.previousSettings=angular.copy(r),e.$watch("component.multiple",function(o){e.data[e.component.key]=o?[""]:""}),e.$watch("component.label",function(){e.component.label&&!e.component.lockKey&&(e.data.hasOwnProperty(e.component.key)&&delete e.data[e.component.key],e.component.key=l.toCamelCase(e.component.label),e.data[e.component.key]=e.component.multiple?[""]:"")}),o.components[r.type]&&o.components[r.type].onEdit&&o.components[r.type].onEdit(e,r,a),n.open({template:"formio/components/settings.html",scope:e,className:"ngdialog-theme-default component-settings"})},e.cancelSettings=function(){e.component=e.previousSettings,n.close()},e.saveSettings=function(){n.close()}}]}}),e.directive("formBuilderComponent",["formioComponentDirective",function(e){return angular.extend({},e[0],{scope:!1,templateUrl:"formio/formbuilder/component.html"})}]),e.directive("formBuilderElement",["formioElementDirective",function(e){return angular.extend({},e[0],{scope:!1,controller:["$scope","formioComponents",function(e,o){var l=o.components[e.component.type];l.fbtemplate&&(e.template=l.fbtemplate)}]})}]),e.directive("formBuilderList",function(){return{scope:!1,restrict:"E",replace:!0,templateUrl:"formio/formbuilder/list.html"}}),e.directive("formBuilderComponentList",function(){return{scope:!1,restrict:"E",replace:!0,templateUrl:"formio/formbuilder/component-list.html"}}),e.run(["$templateCache",function(e){e.put("formio/formbuilder/component.html",'<div class="component-form-group" ng-class="{highlight: hover}" ng-mouseenter="hover = true" ng-mouseleave="hover = false"><button class="btn btn-xs btn-default component-settings-button" style="z-index: 1000" ng-click="editComponent(components, component)"><span class="glyphicon glyphicon-cog"></span></button><button class="btn btn-xs btn-default component-settings-button" style="z-index: 1000" disabled="disabled"><span class="glyphicon glyphicon glyphicon-move"></span></button><div class="form-group has-feedback" style="position:inherit"><form-builder-element></form-builder-element></div></div>'),e.put("formio/formbuilder/list.html",'<ul class="component-list" dnd-list="components"dnd-drop="addComponent(components, item)"><li ng-if="components.length === 0"><div class="alert alert-info" style="text-align:center; margin-bottom: 0px;" role="alert">Drag and Drop a form component</div></li><li ng-repeat="component in components" dnd-draggable="component" dnd-effect-allowed="move" dnd-moved="components.splice($index, 1)"><form-builder-component></form-builder-component></li></ul>'),e.put("formio/formbuilder/component-list.html",'<ul class="component-list" dnd-list="component.components"dnd-drop="addComponent(component.components, item)"><li ng-repeat="component in component.components" dnd-draggable="component" dnd-effect-allowed="move" dnd-moved="components.splice($index, 1)"><form-builder-component></form-builder-component></li></ul>'),e.put("formio/formbuilder/builder.html",'<div class="row"><div class="col-sm-3"><accordion close-others="true"><accordion-group ng-repeat="(groupName, group) in formComponentGroups" heading="{{ group.title }}" is-open="$first"><ul class="form-component-list"><li ng-repeat="component in formComponentsByGroup[groupName]"dnd-draggable="component.settings"dnd-effect-allowed="copy"><button type="button" class="btn btn-success btn-block" disabled="disabled">{{component.title}}</button></li></ul></accordion-group></accordion></div><div class="col-sm-9 formbuilder"><tabset><tab heading="Page 1"><div class="dropzone"><form-builder-list></form-builder-list></div><br><button type="button" class="btn btn-info btn-block" ng-click=""><i class="glyphicon glyphicon-plus-sign"></i> Add Behavior</button></tab><tab><tab-heading><i class="glyphicon glyphicon-plus-sign"></i> Add Page</tab-heading></tab></tabset></div></div>')}]);var e=angular.module("formio.components");e.run(["$templateCache",function(e){e.put("formio/components/settings.html",'<form id="component-settings" novalidate><div class="row"><div class="col-xs-6"><tabset><tab ng-repeat="view in formComponents[component.type].views" heading="{{ view.name }}"><ng-include src="view.template"></ng-include></tab></tabset></div><div class="col-xs-6"><div class="panel panel-default"><div class="panel-heading">Preview</div><div class="panel-body"><formio-component component="component" data="data"></formio-component></div></div><div class="form-group"><button type="submit" class="btn btn-success" ng-click="saveSettings()">Save</button>&nbsp;<button type="button" class="btn btn-default" ng-click="cancelSettings()">Cancel</button>&nbsp;<button type="button" class="btn btn-danger" ng-click="removeComponent()">Remove</button></div></div></div></form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("textfield",{views:[{name:"Display",template:"formio/components/textfield/display.html"},{name:"Validation",template:"formio/components/textfield/validate.html"},{name:"API",template:"formio/components/textfield/api.html"}]})}),e.run(["$templateCache",function(e){e.put("formio/components/textfield/display.html",'<ng-form><div class="form-group"><label for="label">Label</label><input type="text" class="form-control" id="label" name="label" ng-model="component.label" placeholder="Field Label" value="{{ component.label }}"></div><div class="form-group"><label for="placeholder">Place Holder</label><input type="text" class="form-control" id="placeholder" name="placeholder" ng-model="component.placeholder" placeholder="Placeholder" value="{{ component.placeholder }}"></div><div class="form-group"><label for="placeholder">Input Mask</label><input type="text" class="form-control" id="inputMask" name="inputMask" ng-model="component.inputMask" placeholder="Input Mask" value="{{ component.inputMask }}"></div><div class="form-group"><label for="prefix">Prefix</label><input type="text" class="form-control" id="prefix" name="prefix" ng-model="component.prefix" placeholder="example \'$\', \'@\'" value="{{ component.prefix }}"></div><div class="form-group"><label for="suffix">Suffix</label><input type="text" class="form-control" id="suffix" name="suffix" ng-model="component.suffix" placeholder="example \'%\', \'#\'" value="{{ component.suffix }}"></div><div class="checkbox"><label><input type="checkbox" id="multiple" name="multiple" ng-model="component.multiple" ng-checked="component.multiple"> Multiple Values</label></div></ng-form>'),e.put("formio/components/textfield/api.html",'<ng-form><div class="form-group"><label for="key">Property Name</label><input type="text" class="form-control" id="key" name="key" ng-model="component.key" value="{{ component.key }}" ng-required ng-disabled="component.lockKey"></div></ng-form>'),e.put("formio/components/textfield/validate.html",'<ng-form><div class="checkbox"><label><input type="checkbox" id="required" name="required" ng-model="component.validate.required" ng-checked="component.validate.required"> Required</label></div><div class="form-group"><label for="label">Minimum Length</label><input type="number" class="form-control" id="min" name="min" ng-model="component.validate.minLength" placeholder="Minimum Length" value="{{ component.validate.minLength }}"></div><div class="form-group"><label for="label">Maximum Length</label><input type="number" class="form-control" id="max" name="max" ng-model="component.validate.maxLength" placeholder="Maximum Length" value="{{ component.validate.maxLength }}"></div><div class="form-group"><label for="label">Regular Expression Pattern</label><input type="text" class="form-control" id="pattern" name="pattern" ng-model="component.validate.pattern" placeholder="Regular Expression Pattern" value="{{ component.validate.pattern }}"></div><div class="panel panel-default"><div class="panel-heading"><a class="panel-title" ng-click="customCollapsed = !customCollapsed">Custom Validation</a></div><div class="panel-body" collapse="customCollapsed" ng-init="customCollapsed = true;"><textarea class="form-control" rows="5" id="custom" name="custom" ng-model="component.validate.custom" placeholder="/*** Example Code ***/\nvalid = (input === 3) ? true : \'Must be 3\';">{{ component.validate.custom }}</textarea><small><p>Enter custom validation code.</p><p>You must assign the <strong>valid</strong> variable as either <strong>true</strong> or an error message if validation fails.</p><p>The global variables <strong>input</strong>, <strong>component</strong>, and <strong>valid</strong> are provided.</p></small></div></div></ng-form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("address",{views:[{name:"Display",template:"formio/components/address/display.html"},{name:"Validation",template:"formio/components/address/validate.html"},{name:"API",template:"formio/components/address/api.html"}]})}),e.run(["$templateCache",function(e){e.put("formio/components/address/display.html",'<ng-form><div class="form-group"><label for="label">Label</label><input type="text" class="form-control" id="label" name="label" ng-model="component.label" placeholder="Field Label" value="{{ component.label }}"></div><div class="form-group"><label for="placeholder">Place Holder</label><input type="text" class="form-control" id="placeholder" name="placeholder" ng-model="component.placeholder" placeholder="Placeholder" value="{{ component.placeholder }}"></div><div class="form-group checkbox"><label><input type="checkbox" id="multiple" name="multiple" ng-model="component.multiple" ng-checked="component.multiple"> Allow Multiple Addresses</label></div></ng-form>'),e.put("formio/components/address/api.html",'<ng-form><div class="form-group"><label for="key">Property Name</label><input type="text" class="form-control" id="key" name="key" ng-model="component.key" value="{{ component.key }}" ng-required ng-disabled="component.lockKey"></div></ng-form>'),e.put("formio/components/address/validate.html",'<ng-form><div class="form-group"><label for="key">Required</label></div></ng-form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("container",{fbtemplate:"formio/formbuilder/container.html"})}),e.run(["$templateCache",function(e){e.put("formio/formbuilder/container.html",'<div class="row"><div class="col-xs-6 component-form-group" ng-repeat="components in component.columns"><form-builder-list></form-builder-list></div></div>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("email",{views:e.$get().components.textfield.views})});var e=angular.module("formio.components");e.config(function(e){e.register("fieldset",{fbtemplate:"formio/formbuilder/fieldset.html"})}),e.run(["$templateCache",function(e){e.put("formio/formbuilder/fieldset.html",'<fieldset><legend ng-if="component.legend">{{ component.legend }}</legend><form-builder-component-list></form-builder-component-list></fieldset>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("number",{views:[{name:"Display",template:"formio/components/number/display.html"},{name:"Validation",template:"formio/components/number/validate.html"},{name:"API",template:"formio/components/textfield/api.html"}]})}),e.run(["$templateCache",function(e){e.put("formio/components/number/display.html",'<ng-form><div class="form-group"><label for="label">Label</label><input type="text" class="form-control" id="label" name="label" ng-model="component.label" placeholder="Field Label" value="{{ component.label }}"></div><div class="form-group"><label for="placeholder">Place Holder</label><input type="text" class="form-control" id="placeholder" name="placeholder" ng-model="component.placeholder" placeholder="Placeholder" value="{{ component.placeholder }}"></div><div class="form-group"><label for="placeholder">Increment (Step)</label><input type="text" class="form-control" id="step" name="step" ng-model="component.validate.step" placeholder="Enter how much to increment per step (or precision)." value="{{ component.validate.step }}"></div><div class="form-group"><label for="prefix">Prefix</label><input type="text" class="form-control" id="prefix" name="prefix" ng-model="component.prefix" placeholder="example \'$\', \'@\'" value="{{ component.prefix }}"></div><div class="form-group"><label for="suffix">Suffix</label><input type="text" class="form-control" id="suffix" name="suffix" ng-model="component.suffix" placeholder="example \'%\', \'#\'" value="{{ component.suffix }}"></div><div class="checkbox"><label><input type="checkbox" id="multiple" name="multiple" ng-model="component.multiple" ng-checked="component.multiple"> Multiple Values</label></div></ng-form>'),e.put("formio/components/number/validate.html",'<ng-form><div class="checkbox"><label><input type="checkbox" id="required" name="required" ng-model="component.validate.required" ng-checked="component.validate.required"> Required</label></div><div class="form-group"><label for="label">Minimum Value</label><input type="number" class="form-control" id="min" name="min" ng-model="component.validate.min" placeholder="Minimum Value" value="{{ component.validate.min }}"></div><div class="form-group"><label for="label">Maximum Value</label><input type="number" class="form-control" id="max" name="max" ng-model="component.validate.max" placeholder="Maximum Value" value="{{ component.validate.max }}"></div><div class="form-group"><label for="label">Greater Than</label><input type="number" class="form-control" id="greater" name="greater" ng-model="component.validate.greater" placeholder="Greater Than" value="{{ component.validate.greater }}"></div><div class="form-group"><label for="label">Less Than</label><input type="number" class="form-control" id="less" name="less" ng-model="component.validate.less" placeholder="Less Than" value="{{ component.validate.less }}"></div><div class="panel panel-default"><div class="panel-heading"><a class="panel-title" ng-click="customCollapsed = !customCollapsed">Custom Validation</a></div><div class="panel-body" collapse="customCollapsed" ng-init="customCollapsed = true;"><textarea class="form-control" rows="5" id="custom" name="custom" ng-model="component.validate.custom" placeholder="/*** Example Code ***/\nvalid = (input === 3) ? true : \'Must be 3\';">{{ component.validate.custom }}</textarea><small><p>Enter custom validation code.</p><p>You must assign the <strong>valid</strong> variable as either <strong>true</strong> or an error message if validation fails.</p><p>The global variables <strong>input</strong>, <strong>component</strong>, and <strong>valid</strong> are provided.</p></small></div></div></ng-form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("password",{views:e.$get().components.textfield.views})});var e=angular.module("formio.components");e.config(function(e){e.register("phoneNumber",{views:[{name:"Display",template:"formio/components/phoneNumber/display.html"},{name:"Validation",template:"formio/components/phoneNumber/validate.html"},{name:"API",template:"formio/components/phoneNumber/api.html"}]})}),e.run(["$templateCache",function(e){e.put("formio/components/phoneNumber/display.html",'<ng-form><div class="form-group"><label for="label">Label</label><input type="text" class="form-control" id="label" name="label" ng-model="component.label" placeholder="Field Label" value="{{ component.label }}"></div><div class="form-group"><label for="placeholder">Place Holder</label><input type="text" class="form-control" id="placeholder" name="placeholder" ng-model="component.placeholder" placeholder="Placeholder" value="{{ component.placeholder }}"></div><div class="form-group"><label for="placeholder">Input Mask</label><input type="text" class="form-control" id="inputMask" name="inputMask" ng-model="component.inputMask" placeholder="Input Mask" value="{{ component.inputMask }}"></div><div class="form-group"><label for="prefix">Prefix</label><input type="text" class="form-control" id="prefix" name="prefix" ng-model="component.prefix" placeholder="example \'$\', \'@\'" value="{{ component.prefix }}"></div><div class="form-group"><label for="suffix">Suffix</label><input type="text" class="form-control" id="suffix" name="suffix" ng-model="component.suffix" placeholder="example \'%\', \'#\'" value="{{ component.suffix }}"></div></ng-form>'),e.put("formio/components/phoneNumber/api.html",'<ng-form><div class="form-group"><label for="key">Property Name</label><input type="text" class="form-control" id="key" name="key" ng-model="component.key" value="{{ component.key }}" ng-required ng-disabled="component.lockKey"></div></ng-form>'),e.put("formio/components/phoneNumber/validate.html",'<ng-form><div class="form-group"><label for="key">Required</label></div></ng-form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("resource",{onEdit:function(e,o,l){e.resources=[],l().loadResources().then(function(o){e.resources=o,e.component.resource||(e.component.resource=o[0]._id)})},views:[{name:"Display",template:"formio/components/resource/display.html"},{name:"Validation",template:"formio/components/resource/validate.html"},{name:"API",template:"formio/components/resource/api.html"}]})}),e.run(["$templateCache",function(e){e.put("formio/components/resource/display.html",'<ng-form><div class="form-group"><label for="label">Label</label><input type="text" class="form-control" id="label" name="label" ng-model="component.label" placeholder="Field Label" value="{{ component.label }}"></div><div class="form-group"><label for="placeholder">Place Holder</label><input type="text" class="form-control" id="placeholder" name="placeholder" ng-model="component.placeholder" placeholder="Placeholder" value="{{ component.placeholder }}"></div><div class="form-group"><label for="placeholder">Resource</label><select class="form-control" id="resource" name="resource" ng-options="value._id as value.title for value in resources" ng-model="component.resource"></select></div><div class="form-group"><label for="placeholder">Search Expression</label><input type="text" class="form-control" id="searchExpression" name="searchExpression" ng-model="component.searchExpression" placeholder="The search string regular expression" value="{{ component.searchExpression }}"></div><div class="form-group"><label for="placeholder">Search Fields</label><input type="text" class="form-control" id="searchFields" name="searchFields" ng-model="component.searchFields" ng-list placeholder="The search field parings" value="{{ component.searchFields }}"></div><div class="form-group"><label for="placeholder">Item Template</label><textarea class="form-control" id="template" name="template" ng-model="component.template" rows="3">{{ component.template }}</textarea></div><div class="form-group checkbox"><label><input type="checkbox" id="multiple" name="multiple" ng-model="component.multiple" ng-checked="component.multiple"> Allow Multiple Resources</label></div></ng-form>'),e.put("formio/components/resource/api.html",'<ng-form><div class="form-group"><label for="key">Property Name</label><input type="text" class="form-control" id="key" name="key" ng-model="component.key" value="{{ component.key }}" ng-required ng-disabled="component.lockKey"></div></ng-form>'),e.put("formio/components/resource/validate.html",'<ng-form><div class="form-group"><label for="key">Required</label></div></ng-form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("select",{views:[{name:"Display",template:"formio/components/select/display.html"},{name:"Validation",template:"formio/components/select/validate.html"},{name:"API",template:"formio/components/select/api.html"}]})}),e.run(["$templateCache",function(e){e.put("formio/components/select/display.html",'<ng-form><div class="form-group"><label for="label">Label</label><input type="text" class="form-control" id="label" name="label" ng-model="component.label" placeholder="Field Label" value="{{ component.label }}"></div><div class="form-group"><label for="placeholder">Place Holder</label><input type="text" class="form-control" id="placeholder" name="placeholder" ng-model="component.placeholder" placeholder="Placeholder" value="{{ component.placeholder }}"></div><div class="form-group"><label for="placeholder">Data Source</label><textarea class="form-control" id="dataSrc" name="dataSrc" ng-model="component.dataSrc" placeholder="Data Source URL or JSON" rows="3">{{ component.dataSrc }}</textarea></div><div class="form-group"><label for="placeholder">Item Template</label><textarea class="form-control" id="template" name="template" ng-model="component.template" rows="3">{{ component.template }}</textarea></div><div class="form-group checkbox"><label><input type="checkbox" id="multiple" name="multiple" ng-model="component.multiple" ng-checked="component.multiple"> Allow Multiple Values</label></div></ng-form>'),e.put("formio/components/select/api.html",'<ng-form><div class="form-group"><label for="key">Property Name</label><input type="text" class="form-control" id="key" name="key" ng-model="component.key" value="{{ component.key }}" ng-required ng-disabled="component.lockKey"></div></ng-form>'),e.put("formio/components/select/validate.html",'<ng-form><div class="form-group"><label for="key">Required</label></div></ng-form>')}]);var e=angular.module("formio.components");e.config(function(e){e.register("textarea",{views:[{name:"Display",template:"formio/components/textfield/display.html"},{name:"Validation",template:"formio/components/textfield/validate.html"},{name:"API",template:"formio/components/textfield/api.html"}]})});var e=angular.module("formio.components");e.config(function(e){e.register("well",{fbtemplate:"formio/formbuilder/well.html"})}),e.run(["$templateCache",function(e){e.put("formio/formbuilder/well.html",'<div class="well"><form-builder-component-list></form-builder-component-list></div>')}])}();